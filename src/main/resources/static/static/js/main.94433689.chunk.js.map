{"version":3,"sources":["client.js","Conteiner.js","notification.js","pages/Courses.js","Footer.js","forms/AddStudentForms.js","pages/Students.js","pages/test.js","App.js","serviceWorker.js","index.js"],"names":["checkStatus","response","ok","error","Error","statusText","json","then","e","Promise","reject","getAllStudents","fetch","getAllStudentCourse","studentId","Conteiner","props","style","width","margin","children","openNotification","type","message","description","notification","infoNotification","errorNotification","Courses","state","courses","isFetching","fetchStudentCourses","setState","match","params","res","course","catch","err","this","className","indicator","LoadingOutlined","fontSize","spin","length","dataSource","columns","title","dataIndex","key","rowKey","pagination","marginTop","image","Empty","PRESENTED_IMAGE_SIMPLE","Component","Footer","undefined","numberOfStudents","backgroundColor","marginRight","size","onClick","handleAddStudentClickEvent","marginBottom","AddStudentForm","initialValues","firstName","lastName","email","gender","validate","values","errors","test","includes","onSubmit","student","setSubmitting","headers","method","body","JSON","stringify","onSuccess","onFailuer","finally","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitForm","isValid","name","onChange","onBlur","value","placeholder","color","disabled","Students","students","isAddStuudentModalVisibility","openAddStuudentModal","closeAddStuudentModal","fetchStudents","console","log","commonElements","visible","onOk","onCancel","cancelText","okText","render","text","charAt","toUpperCase","to","Test","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94433689.chunk.js","sourcesContent":["import fetch from 'unfetch';\r\n\r\nconst checkStatus = response => {\r\n    if(response.ok) {\r\n        return response;\r\n    } else {\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        response.json().then(e => {\r\n            error.error = e;\r\n        });\r\n        return Promise.reject(error);\r\n    }\r\n}\r\n\r\nexport const getAllStudents = ()  => \r\n    fetch('/api/students').then(checkStatus);\r\n\r\nexport const getAllStudentCourse = (studentId) => \r\n    fetch(`/api/students/${studentId}/course`)\r\n    .then(checkStatus);\r\n\r\nexport const addNewStudent = student => \r\nfetch('/api/students', {\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    method: 'POST',\r\n    body: JSON.stringify(student)\r\n}).then(checkStatus);\r\n","import React from 'react';\r\n\r\nconst Conteiner = props => (\r\n        <div style={{width: '1400px', margin: '0 auto'}}>\r\n            {props.children}\r\n        </div>\r\n);\r\nexport default Conteiner;","import { notification } from \"antd\";\r\n\r\nconst openNotification = (type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description\r\n    });\r\n  };\r\nexport const successNotification = (message, description) => \r\n    openNotification('success', message, description);\r\n\r\nexport const infoNotification = (message, description) => \r\n    openNotification('info', message, description);\r\n    \r\nexport const warningNotification = (message, description) => \r\n    openNotification('warning', message, description);\r\n\r\nexport const errorNotification = (message, description) => \r\n    openNotification('error', message, description);","import React, {Component} from 'react';\r\nimport {getAllStudentCourse} from '../client';\r\nimport {Table, Empty} from 'antd';\r\nimport Conteiner from '../Conteiner';\r\nimport {infoNotification} from '../notification';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst antIcon = () => <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\nclass Courses extends Component {\r\n\r\n   state = {\r\n      courses: [],\r\n      studentId: '',\r\n      isFetching: false\r\n   }\r\n   componentDidMount () {\r\n      this.fetchStudentCourses();\r\n    }\r\n\r\n   fetchStudentCourses = () => {\r\n      this.setState({isFetching: true})\r\n      const studentId = this.props.match.params.studentId;\r\n      this.setState({studentId});\r\n      getAllStudentCourse(studentId)\r\n         .then(res => res.json())\r\n         .then(course => {\r\n            this.setState({courses: course})\r\n            this.setState({isFetching: false})\r\n         }).catch(err => {\r\n            const error = err.error.error;\r\n            const description = err.error.description;\r\n            infoNotification(error, description);\r\n            this.setState({isFetching: false})\r\n            \r\n         })\r\n   } \r\n    render() {\r\n      const {courses, isFetching} = this.state;\r\n      if(isFetching) {\r\n         return (\r\n            <div className='spinner'>\r\n               <Spin indicator={antIcon()} />\r\n            </div>\r\n         )\r\n      }\r\n      if(courses && courses.length) {\r\n\r\n         const columns = [\r\n            {\r\n               title: 'Course Id',\r\n               dataIndex: 'courseId',\r\n               key: 'courseId'\r\n            },\r\n            {\r\n               title: 'Department',\r\n               dataIndex: 'department',\r\n               key: 'department'\r\n            },\r\n            {\r\n               title: 'Description',\r\n               dataIndex: 'description',\r\n               key: 'description'\r\n            },\r\n            {\r\n               title: 'Grade',\r\n               dataIndex: 'grade',\r\n               key: 'grade'\r\n            },\r\n            {\r\n               title: 'Name',\r\n               dataIndex: 'name',\r\n               key: 'name'\r\n            },\r\n            {\r\n               title: 'Start Date',\r\n               dataIndex: 'startDate',\r\n               key: 'startDate'\r\n            },\r\n            {\r\n               title: 'End Date',\r\n               dataIndex: 'endDate',\r\n               key: 'endDate'\r\n            },\r\n            {\r\n               title: 'Teacher Name',\r\n               dataIndex: 'teacherName',\r\n               key: 'teacherName'\r\n            }\r\n         ]\r\n        \r\n         return (\r\n            <Conteiner>\r\n               <Table \r\n                  dataSource={courses} \r\n                  columns={columns}\r\n                  rowKey='courseId'\r\n                  pagination= {false}\r\n                  />\r\n            </Conteiner>\r\n         )\r\n      } else {\r\n         return (<Conteiner>\r\n            <Empty \r\n               style={{marginTop:'9em' }}\r\n               image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n               description={\r\n                  <h1>No course found</h1>\r\n               }\r\n               />\r\n         </Conteiner>\r\n         );\r\n      }\r\n      \r\n      \r\n    }\r\n}\r\n \r\nexport default Courses;","import React from 'react';\r\nimport Conteiner from './Conteiner';\r\nimport {Button, Avatar} from 'antd';\r\nimport './Footer.css';\r\nconst Footer = (props) => (\r\n    <div className='footer'>\r\n        <Conteiner>\r\n            {props.numberOfStudents !== undefined ? \r\n                <Avatar \r\n                    style={{backgroundColor: '#f56a00', marginRight: '5px'}} size='large'>{props.numberOfStudents}</Avatar> : null}\r\n            <Button onClick={() => props.handleAddStudentClickEvent()} type='primary'>Add new student +</Button>\r\n        </Conteiner>\r\n    </div>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport {Input, Button, Tag } from 'antd';\r\nimport { addNewStudent } from '../client'\r\n\r\nconst marginBottom = {marginBottom: '10px'};\r\n\r\nconst AddStudentForm = (props) => \r\n  (\r\n    <Formik\r\n      initialValues={{firstName: '', lastName: '', email: '', gender: '' }}\r\n      validate={values => {\r\n        const errors = {};\r\n\r\n        if(!values.firstName) {\r\n          errors.firstName = 'First Name required';\r\n        }\r\n        if(!values.lastName) {\r\n          errors.lastName = 'Last Name required';\r\n        }\r\n        if (!values.email) {\r\n          errors.email = 'Email required';\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n        if(!values.gender) {\r\n          errors.gender = 'Gender required';\r\n        } else if (!['MALE', 'male', 'FEMALE', 'female'].includes(values.gender)) {\r\n          errors.gender = 'Gender must be (MALE, male, FEMALE)';\r\n        }\r\n\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n          addNewStudent(values).then(() => {\r\n            props.onSuccess();\r\n          }).catch(error => {\r\n            props.onFailuer(error);\r\n          }).finally(setSubmitting(false))\r\n          \r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        submitForm,\r\n        isValid\r\n        /* and other goodies */\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Input\r\n            style={marginBottom}\r\n            name=\"firstName\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.firstName}\r\n            placeholder='First name. E.g. John'\r\n          />\r\n          {errors.firstName && touched.firstName && <Tag color='red' style={marginBottom}>{errors.firstName}</Tag>}\r\n          <Input\r\n            style={marginBottom}\r\n            name=\"lastName\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.lastName}\r\n            placeholder='Last name. E.g. Nelson'\r\n          />\r\n          {errors.lastName && touched.lastName && <Tag color='red' style={marginBottom}>{errors.lastName}</Tag>}\r\n          <Input\r\n            style={marginBottom}\r\n            name=\"email\"\r\n            type='email'\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.email}\r\n            placeholder='Email. E.g. example@gmail.com'\r\n          />\r\n          {errors.email && touched.email && <Tag color='red' style={marginBottom}>{errors.email}</Tag>}\r\n          <Input\r\n            style={marginBottom}\r\n            name=\"gender\"                  \r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.gender}\r\n            placeholder='Gender. E.g. MALE or FEMALE'\r\n          />\r\n          {errors.gender && touched.gender && <Tag color='red' style={marginBottom}>{errors.gender}</Tag>}\r\n          \r\n          <Button \r\n            onClick={() => submitForm()} \r\n            type=\"submit\" \r\n            disabled={isSubmitting || (touched && !isValid)}>\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n        \r\n        );\r\nexport default AddStudentForm;","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport { getAllStudents } from '../client';\r\nimport Conteiner from '../Conteiner';\r\nimport {\r\n\tTable,\r\n\tAvatar,\r\n\tSpin,\r\n\tEmpty,\r\n\tButton\r\n} from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport Footer from '../Footer';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport AddStudentForm from '../forms/AddStudentForms';\r\nimport { errorNotification, successNotification } from '../notification';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst antIcon = () => <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\nclass Students extends Component {\r\n\r\n\tstate = {\r\n\t\tstudents: [],\r\n\t\tisFetching: false,\r\n\t\tisAddStuudentModalVisibility: false\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.fetchStudents();\r\n    }\r\n   \r\n\topenAddStuudentModal = () => this.setState({isAddStuudentModalVisibility: true})\r\n\r\n\tcloseAddStuudentModal = () => this.setState({isAddStuudentModalVisibility: false})\r\n\r\n\tfetchStudents = () => {\r\n\t\tthis.setState({\r\n\t\t\tisFetching: true\r\n\t\t});\r\n\t\tgetAllStudents()\r\n\t\t.then(res => res.json()\r\n\t\t.then(students => {\r\n\t\t\tconsole.log(students)\r\n\t\t\tthis.setState({students, isFetching: false})\r\n\t\t})).catch(error => {\r\n\t\t\tconst message = error.error.message;\r\n\t\t\tconst description = error.error.error;\r\n\t\t\terrorNotification(message, description);\r\n\t\t\tthis.setState({\r\n\t\t\t\tisFetching:false\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\t\r\n\trender() {\r\n\r\n\t\t\r\n\t\tconst {students, isFetching, isAddStuudentModalVisibility} = this.state;\r\n\t\tif(isFetching) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='spinner'>\r\n\t\t\t\t\t<Spin indicator={antIcon()}/>\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\tconst commonElements = () => (\r\n\t\t\t<div>\r\n\t\t\t\t<Modal \r\n\t\t\t\t\ttitle='Add new student'\r\n\t\t\t\t\tvisible={isAddStuudentModalVisibility}\r\n\t\t\t\t\tonOk={this.closeAddStuudentModal}\r\n\t\t\t\t\tonCancel={this.closeAddStuudentModal}\r\n\t\t\t\t\tcancelText={true}\r\n\t\t\t\t\tokText={true}\r\n\t\t\t\t\twidth={1000}>\r\n\t\t\t\t\t\t<AddStudentForm \r\n\t\t\t\t\t\t\tonSuccess = {() =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.closeAddStuudentModal();\r\n\t\t\t\t\t\t\t\tthis.fetchStudents();\r\n\t\t\t\t\t\t\t\tsuccessNotification('Congratulation!', 'You successfully added new student');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonFailuer = {error => {\r\n\t\t\t\t\t\t\t\tconst message = error.error.message;\r\n\t\t\t\t\t\t\t\tconst description = error.error.error;\r\n\t\t\t\t\t\t\t\terrorNotification(message, description);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Modal >\r\n\t\t\t\t<Footer numberOfStudents={students.length}\r\n\t\t\t\thandleAddStudentClickEvent={this.openAddStuudentModal}></Footer>\r\n\r\n\t\t\t</div>\r\n\t\t)  \r\n\t\t\r\n\t\tif(students && students.length) {\r\n\t\t\t\t\r\n\t\t\tconst columns = [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\tkey: 'avatar',\r\n\t\t\t\t\trender: (text, student) => (\r\n\t\t\t\t\t\t<Avatar size='large'>\r\n\t\t\t\t\t\t\t{`${student.firstName.charAt(0).toUpperCase()} ${student.lastName.charAt(0).toUpperCase()}`}\r\n\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t)\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'StudentId',\r\n\t\t\t\t\tdataIndex: 'studentId',\r\n\t\t\t\t\tkey: 'studentId'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'First Name',\r\n\t\t\t\t\tdataIndex: 'firstName',\r\n\t\t\t\t\tkey: 'firstName'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Last Name',\r\n\t\t\t\t\tdataIndex: 'lastName',\r\n\t\t\t\t\tkey: 'lastName'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Email',\r\n\t\t\t\t\tdataIndex: 'email',\r\n\t\t\t\t\tkey: 'email'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Gender',\r\n\t\t\t\t\tdataIndex: 'gender',\r\n\t\t\t\t\tkey: 'gender'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\tkey: 'course',\r\n\t\t\t\t\trender: (text, student) => (\r\n\t\t\t\t\t\t<Link to={`/${student.studentId}/courses`}>Course</Link>\r\n\t\t\t\t\t)\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\tkey: 'test',\r\n\t\t\t\t\trender: (text, student) => (\r\n\t\t\t\t\t\t<Link to='/test'>Test</Link>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t];\r\n\t\t\treturn (\r\n\t\t\t\t<Conteiner>\r\n\t\t\t\t\t<Table style={{marginBottom:'100px'}}\r\n\t\t\t\t\t\tdataSource={students} \r\n\t\t\t\t\t\tcolumns={columns} \r\n\t\t\t\t\t\trowKey='studentId'\r\n\t\t\t\t\t\tpagination= {false}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{commonElements()}\r\n\t\t\t\t</Conteiner>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (<Conteiner>\r\n\t\t\t<Empty \r\n\t\t\t\tstyle={{marginTop:'9em' }}\r\n\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\tdescription={\r\n\t\t\t\t\t<h1>No student found</h1>\r\n\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t{commonElements()};\r\n\t\t</Conteiner>\r\n\t\t);\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Students;","import React, { Component } from 'react';\r\n\r\nclass Test extends Component{\r\n    render() {\r\n        return(\r\n            <div>Test page</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;","import React, {Component} from 'react';\nimport './App.css';\nimport { \n\tBrowserRouter as Router,\n\tRoute} from 'react-router-dom';\nimport Courses from './pages/Courses';\nimport Students from './pages/Students';\nimport Test from './pages/test'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\n\t\t\t<Router >\n\t\t\t\t<Route exact path='/' component={Students}/>\n\t\t\t\t<Route exact path='/:studentId/courses' component={Courses}/>\n\t\t\t\t<Route path='/test' component={Test}/>\n\t\t\t</Router>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}